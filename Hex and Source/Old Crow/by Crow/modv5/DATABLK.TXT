;
;  Data conversion example:
;
;  *) A single data string transmission looks like this:
;
;    72ms delay w/"data" pin low, then serial ASCII string 'SCEA'
;
;  *) Each byte in the string will be sent serially at 250 baud
;     with 1 start bit (low) and two stop bits (high).  It looks 
;     like this in binary, from RIGHT to LEFT:
;        'A'           'E'           'C'           'S'
;    11 01000001 0 11 01000101 0 11 01000011 0 11 01010011 0 
;
;  *) Now, since the serial data is inverted from the polarilty of
;     standard asynchronous serial data at logic-levels, all the bits
;     need to be complemented:
;
;    00 10111110 1 00 10111010 1 00 10111100 1 00 10101100 1 
;
;  *) Regroup the bits in sets of 8.  The last group will only have 4,
;     so pad it with zeroes.
;
;    00101111 10100101 11010100 10111100 10010101 1001(0000)
;
;  *) Now, write the bit string in reverse.  This is needed because
;     standard serial data is sent LSB first, but the author's original
;     data is sent MSB first.  Reversing the string so that the last bit
;     becomes the first bit compensates for this:
;
;    00001001 10101001 00111101 00101011 10100101 11110100
;
;  *) Make them into hex bytes, and the conversion is complete:
;
;    09 A9 3D 2B A5 F4
;
;  This version of the data string is sent as follows:
;
;    56ms delay/w "data" pin low, then 09 A9 3D 2B A5 F4
;
;  The data is sent at 250 bits/sec with no start or stop bits added;
;  they are already there.  Data is sent MSB-first.
;
;  Note that the 6-byte data string is functionally equivalent to the
;  4-byte ASCII version once a bit of equation balancing is done.
;
;     --Crow  21-FEB-97
;


